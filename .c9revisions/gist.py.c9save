{"ts":1376056429965,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import arcpy\r\nfrom tempfile import mkdtemp\r\nfrom os import remove, rmdir\r\nfrom urllib2 import Request, urlopen, HTTPHandler, build_opener\r\nfrom base64 import b64encode\r\nfrom json import dumps\r\npreviewPage = \"\"\"\r\n<!doctype html>\r\n<html lang=\"en\">\r\n    <head>\r\n\t\t<meta charset='utf-8'/>\r\n\t\t<title>\r\n\t\t\tESRI To Couch\r\n\t\t</title>\r\n\t\t<link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css\" />\r\n\t\t<!--[if lte IE 8]>\r\n\t\t\t<link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css\" />\r\n\t\t<![endif]-->\r\n\t\t<style>\r\n\t\t\thtml { height: 100% }\r\n\t\t\tbody { height: 100%; margin: 0; padding: 0;}\r\n\t\t\t#map{ height: 100% }\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\t<div id=\"map\"></div>\r\n\t\t<script src=\"http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js\"></script>\r\n\t\t<script>\r\n\t\t\tfunction fileLoaded(geoJSON){\r\n\t\t\t\tvar map = L.map('map');\r\n\t\t\t\tvar geoJSONLayer = L.geoJson(geoJSON,{onEachFeature:function(feature,layer){\r\n\t\t\t\t\tvar key,popup;\r\n\t\t\t\t\tif(feature.properties){\r\n\t\t\t\t\t\tpopup=\"<ul>\";\r\n\t\t\t\t\t\tfor(key in feature.properties){\r\n\t\t\t\t\t\t\tpopup += \"<li>\"\r\n\t\t\t\t\t\t\tpopup += key;\r\n\t\t\t\t\t\t\tpopup += \" : \";\r\n\t\t\t\t\t\t\tpopup += feature.properties[key];\r\n\t\t\t\t\t\t\tpopup += \"</li>\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpopup += \"</ul>\";\r\n\t\t\t\t\t\tlayer.bindPopup(popup);\r\n\t\t\t\t\t}\r\n\t\t\t\t}});\r\n\t\t\t\tmap.fitBounds(geoJSONLayer.getBounds());\r\n\t\t\t\tL.tileLayer('http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.jpeg', {\r\n\t\t\t\t\tattribution: 'Tiles Courtesy of <a href=\"http://www.mapquest.com/\">MapQuest</a> &mdash; Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>',\r\n\t\t\t\t\tsubdomains: '1234'\r\n\t\t\t\t}).addTo(map);\r\n\t\t\t\tgeoJSONLayer.addTo(map);\r\n\t\t\t}\r\n\t\t</script>\r\n\t\t<script src=\"all?callback=fileLoaded\"></script>\r\n\t</body>\r\n</html>\r\n\"\"\"\r\ndesign = dumps({\r\n   \"_id\": \"_design/geojson\",\r\n   \"spatial\": {\r\n       \"geometry\": \"function(doc){\\n       if(doc.geometry){ emit(doc.geometry,doc)};\\n            }\"\r\n   },\r\n   \"rewrites\": [\r\n       {\r\n           \"to\": \"/_spatial/_list/geojson/geometry\",\r\n           \"from\": \"/all\",\r\n           \"query\": {\r\n               \"bbox\": \"-180,-90,180,90\"\r\n           }\r\n       },\r\n       {\r\n           \"to\": \"/index.html\",\r\n           \"from\": \"/\"\r\n       }\r\n   ],\r\n   \"_attachments\": {\r\n        \"index.html\" : {\r\n            \"content_type\" : \"text/html\",\r\n            \"data\" : b64encode(previewPage)\r\n        }\r\n    },\r\n   \"lists\": {\r\n       \"geojson\": \"function(head, req) {\\n    var row, out, sep = '\\\\n';\\n    if (req.headers.Accept.indexOf('application/json')!=-1) {\\n        start({\\\"headers\\\":{\\\"Content-Type\\\" : \\\"application/json\\\"}});\\n    }    else {\\n        start({\\\"headers\\\":{\\\"Content-Type\\\" : \\\"text/plain\\\"}});\\n    }\\n    if ('callback' in req.query) {\\n        send(req.query['callback'] + \\\"(\\\");\\n    }    send('{\\\"type\\\": \\\"FeatureCollection\\\", \\\"features\\\":[');\\n    while (row = getRow()) {\\n        out = {type: \\\"Feature\\\", geometry: row.value.geometry};\\n\\t\\t\\t\\tdelete row.value.geometry;\\n               out.properties= row.value\\n        send(sep + JSON.stringify(out));        sep = ',\\\\n';\\n    }\\n    send(\\\"]}\\\");\\n    if ('callback' in req.query) {\\n        send(\\\")\\\");}};\\n\"\r\n   },\r\n   \"validate_doc_update\": \"function(newDoc, oldDoc, userCtx) {  if (userCtx.roles.indexOf('_admin') !== -1) {    return;  } else {    throw({forbidden: 'Only admins may edit the database'});  }}\"\r\n})\r\n\r\ndef doStuff(inFile,dbUrl,tbx,login,createDB):\r\n    arcpy.ImportToolbox(tbx)\r\n    base = mkdtemp()\r\n    outFile = base+'//output.json'\r\n    arcpy.esri2open(inFile,outFile)\r\n    postToCouch(dbUrl,outFile,login,createDB)\r\n    cleanUp(base,outFile)\r\n\r\ndef cleanUp(p,f):\r\n    remove(f)\r\n    rmdir(p)\r\n\r\ndef dealLogin(req,login):\r\n    if login == 'NONE':\r\n        return\r\n    req.add_header('Authorization','Basic '+b64encode(login))\r\n\r\ndef postToCouch(url,outFile,login,createDB):\r\n    if createDB=='true' and login != 'NONE':\r\n        opener = build_opener(HTTPHandler)\r\n        res3 = Request(url)\r\n        dealLogin(res3,login)\r\n        res3.get_method = lambda: 'PUT'\r\n        opener.open(res3)\r\n        arcpy.AddMessage(\"Created DB\")\r\n    newUrl = url + '//_bulk_docs'\r\n    baseFile = open(outFile,'r')\r\n    data = baseFile.read()\r\n    baseFile.close()\r\n    req = Request(newUrl)\r\n    dealLogin(req,login)\r\n    req.add_header('Content-Type', 'application/json')\r\n    urlopen(req,data)\r\n    arcpy.AddMessage(\"Added Rows\")\r\n    if login != 'NONE':\r\n        req2 = Request(url)\r\n        dealLogin(req2,login)\r\n        req2.add_header('Content-Type', 'application/json')\r\n        urlopen(req2,design)\r\n        arcpy.AddMessage(\"Added Design Doc\")\r\n        arcpy.AddMessage(\"View it at \"+url+\"/_design/geojson/_rewrite/\")\r\n\r\ndoStuff(arcpy.GetParameterAsText(0),arcpy.GetParameterAsText(1),arcpy.GetParameterAsText(2),arcpy.GetParameterAsText(3),arcpy.GetParameterAsText(4))\r\n"]],"start1":0,"start2":0,"length1":0,"length2":4906}]],"length":4906}
{"contributors":[],"silentsave":false,"ts":1376056865401,"patch":[[{"diffs":[[0,"ps\r\n"],[-1,"previewPage = \"\"\"\r\n<!doctype html>\r\n<html lang=\"en\">\r\n    <head>\r\n\t\t<meta charset='utf-8'/>\r\n\t\t<title>\r\n\t\t\tESRI To Couch\r\n\t\t</title>\r\n\t\t<link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css\" />\r\n\t\t<!--[if lte IE 8]>\r\n\t\t\t<link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.ie.css\" />\r\n\t\t<![endif]-->\r\n\t\t<style>\r\n\t\t\thtml { height: 100% }\r\n\t\t\tbody { height: 100%; margin: 0; padding: 0;}\r\n\t\t\t#map{ height: 100% }\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\t<div id=\"map\"></div>\r\n\t\t<script src=\"http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js\"></script>\r\n\t\t<script>\r\n\t\t\tfunction fileLoaded(geoJSON){\r\n\t\t\t\tvar map = L.map('map');\r\n\t\t\t\tvar geoJSONLayer = L.geoJson(geoJSON,{onEachFeature:function(feature,layer){\r\n\t\t\t\t\tvar key,popup;\r\n\t\t\t\t\tif(feature.properties){\r\n\t\t\t\t\t\tpopup=\"<ul>\";\r\n\t\t\t\t\t\tfor(key in feature.properties){\r\n\t\t\t\t\t\t\tpopup += \"<li>\"\r\n\t\t\t\t\t\t\tpopup += key;\r\n\t\t\t\t\t\t\tpopup += \" : \";\r\n\t\t\t\t\t\t\tpopup += feature.properties[key];\r\n\t\t\t\t\t\t\tpopup += \"</li>\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpopup += \"</ul>\";\r\n\t\t\t\t\t\tlayer.bindPopup(popup);\r\n\t\t\t\t\t}\r\n\t\t\t\t}});\r\n\t\t\t\tmap.fitBounds(geoJSONLayer.getBounds());\r\n\t\t\t\tL.tileLayer('http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.jpeg', {\r\n\t\t\t\t\tattribution: 'Tiles Courtesy of <a href=\"http://www.mapquest.com/\">MapQuest</a> &mdash; Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>',\r\n\t\t\t\t\tsubdomains: '1234'\r\n\t\t\t\t}).addTo(map);\r\n\t\t\t\tgeoJSONLayer.addTo(map);\r\n\t\t\t}\r\n\t\t</script>\r\n\t\t<script src=\"all?callback=fileLoaded\"></script>\r\n\t</body>\r\n</html>\r\n\"\"\"\r\ndesign = dumps({\r\n   \"_id\": \"_design/geojson\",\r\n   \"spatial\": {\r\n       \"geometry\": \"function(doc){\\n       if(doc.geometry){ emit(doc.geometry,doc)};\\n            }\"\r\n   },\r\n   \"rewrites\": [\r\n       {\r\n           \"to\": \"/_spatial/_list/geojson/geometry\",\r\n           \"from\": \"/all\",\r\n           \"query\": {\r\n               \"bbox\": \"-180,-90,180,90\"\r\n           }\r\n       },\r\n       {\r\n           \"to\": \"/index.html\",\r\n           \"from\": \"/\"\r\n       }\r\n   ],\r\n   \"_attachments\": {\r\n        \"index.html\" : {\r\n            \"content_type\" : \"text/html\",\r\n            \"data\" : b64encode(previewPage)\r\n        }\r\n    },\r\n   \"lists\": {\r\n       \"geojson\": \"function(head, req) {\\n    var row, out, sep = '\\\\n';\\n    if (req.headers.Accept.indexOf('application/json')!=-1) {\\n        start({\\\"headers\\\":{\\\"Content-Type\\\" : \\\"application/json\\\"}});\\n    }    else {\\n        start({\\\"headers\\\":{\\\"Content-Type\\\" : \\\"text/plain\\\"}});\\n    }\\n    if ('callback' in req.query) {\\n        send(req.query['callback'] + \\\"(\\\");\\n    }    send('{\\\"type\\\": \\\"FeatureCollection\\\", \\\"features\\\":[');\\n    while (row = getRow()) {\\n        out = {type: \\\"Feature\\\", geometry: row.value.geometry};\\n\\t\\t\\t\\tdelete row.value.geometry;\\n               out.properties= row.value\\n        send(sep + JSON.stringify(out));        sep = ',\\\\n';\\n    }\\n    send(\\\"]}\\\");\\n    if ('callback' in req.query) {\\n        send(\\\")\\\");}};\\n\"\r\n   },\r\n   \"validate_doc_update\": \"function(newDoc, oldDoc, userCtx) {  if (userCtx.roles.indexOf('_admin') !== -1) {    return;  } else {    throw({forbidden: 'Only admins may edit the database'});  }}\"\r\n})\r\n\r\ndef doStuff(inFile,dbUrl,tbx,login,createDB"],[1,"\r\n\r\ndef doStuff(inFile,description,filename,tbx"],[0,"):\r\n"]],"start1":189,"start2":189,"length1":3294,"length2":55},{"diffs":[[0,"/output."],[1,"geo"],[0,"json'\r\n "]],"start1":317,"start2":317,"length1":16,"length2":19},{"diffs":[[0,"post"],[-1,"ToCouch(dbUrl,outFile,login,createDB"],[1,"Gist(outFile,description,filename"],[0,")\r\n "]],"start1":376,"start2":376,"length1":44,"length2":41},{"diffs":[[0,"\r\n\r\n"],[-1,"def dealLogin(req,login):\r\n    if login == 'NONE':\r\n        return\r\n    req.add_header('Authorization','Basic '+b64encode(login))\r\n\r\ndef postToCouch(url,outFile,login,createDB):\r\n    if createDB=='true' and login != 'NONE':\r\n        opener = build_opener(HTTPHandler)\r\n        res3 = Request(url)\r\n        dealLogin(res3,login)\r\n        res3.get_method = lambda: 'PUT'\r\n        opener.open(res3)\r\n        arcpy.AddMessage(\"Created DB\")\r\n    newUrl = url + '//_bulk_doc"],[1,"\r\ndef postGist(outFile,description,filename):\r\n    newUrl = 'http://api.github.com/gist"],[0,"s'\r\n"]],"start1":491,"start2":491,"length1":476,"length2":95},{"diffs":[[0," data = "],[1,"{\"files\":{filename+\".geojson\":{content:"],[0,"baseFile"]],"start1":623,"start2":623,"length1":16,"length2":55},{"diffs":[[0,"e.read()"],[1,"}}}"],[0,"\r\n    ba"]],"start1":677,"start2":677,"length1":16,"length2":19},{"diffs":[[0,"json')\r\n    "],[1,"resp = "],[0,"urlopen(req,"]],"start1":813,"start2":813,"length1":24,"length2":31},{"diffs":[[0,"Rows"],[-1,"\")\r\n    if login != 'NONE':\r\n        req2 = Request(url)\r\n        dealLogin(req2,login)\r\n        req2.add_header('Content-Type', 'application/json')\r\n        urlopen(req2,design)\r\n        arcpy.AddMessage(\"Added Design Doc\")\r\n        arcpy.AddMessage(\"View it at \"+url+\"/_design/geojson/_rewrite/"],[0,"\")\r\n"]],"start1":879,"start2":879,"length1":304,"length2":8}]],"length":1039,"saved":false}
{"ts":1376056970826,"patch":[[{"diffs":[[0,"n\":{"],[1,"'"],[0,"content"],[1,"'"],[0,":bas"]],"start1":658,"start2":658,"length1":15,"length2":17},{"diffs":[[0,"l)\r\n"],[-1,"    dealLogin(req,login)\r\n"],[0,"    "]],"start1":737,"start2":737,"length1":34,"length2":8}]],"length":1015,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376057085648,"patch":[[{"diffs":[[0,"req,"],[1,"dumps("],[0,"data)"],[1,")"],[0,"\r\n  "]],"start1":816,"start2":816,"length1":13,"length2":20}]],"length":1022,"saved":false}
{"ts":1376057994614,"patch":[[{"diffs":[[0,"open"],[-1,", HTTPHandler, build_opener"],[0,""],[1,""],[0,"\r\nfr"]],"start1":106,"start2":106,"length1":35,"length2":8},{"diffs":[[0,"rt dumps"],[1,",loads"],[0,"\r\n\r\n\r\nde"]],"start1":156,"start2":156,"length1":16,"length2":22},{"diffs":[[0,"ile,"],[-1,"description,filename,tbx"],[1,"tbx,filename,description"],[0,"):\r\n"]],"start1":191,"start2":191,"length1":32,"length2":32},{"diffs":[[0,"ostGist(outFile,"],[1,"filename,"],[0,"description,file"]],"start1":481,"start2":481,"length1":32,"length2":41},{"diffs":[[0,"cription"],[-1,",filenam"],[1,"=Fals"],[0,"e):\r\n   "]],"start1":509,"start2":509,"length1":24,"length2":21},{"diffs":[[0," = 'http"],[1,"s"],[0,"://api.g"]],"start1":537,"start2":537,"length1":16,"length2":17},{"diffs":[[0,"ata = {\""],[1,"public\":True,\""],[0,"files\":{"]],"start1":611,"start2":611,"length1":16,"length2":30},{"diffs":[[0,"le.close()\r\n"],[1,"    if description:\r\n        data['description']=description\r\n"],[0,"    req = Re"]],"start1":702,"start2":702,"length1":24,"length2":86},{"diffs":[[0," resp = "],[1,"loads("],[0,"urlopen("]],"start1":862,"start2":862,"length1":16,"length2":22},{"diffs":[[0,"ta))"],[-1,"\r\n    arcpy.AddMessage(\"Added Rows\")"],[1,".read())\r\n    return resp"],[0,"\r\n\r\n"]],"start1":896,"start2":896,"length1":44,"length2":33}]],"length":1079,"saved":false}
{"ts":1376058518030,"patch":[[{"diffs":[[0,"le,tbx,filename,"],[-1,""],[0,""],[1,"login,"],[0,"description):\r\n "]],"start1":192,"start2":192,"length1":32,"length2":38},{"diffs":[[0,"filename"],[-1,""],[0,""],[1,",login,description"],[0,")\r\n    c"]],"start1":390,"start2":390,"length1":16,"length2":34},{"diffs":[[0,"rmdir(p)\r\n\r\n"],[1,"def dealLogin(req,login):\r\n    if login == 'NONE':\r\n        return\r\n    req.add_header('Authorization','Basic '+b64encode(login))\r\n"],[0,"\r\ndef postGi"]],"start1":486,"start2":486,"length1":24,"length2":155},{"diffs":[[0,"ilename,"],[1,"login,"],[0,"descript"]],"start1":653,"start2":653,"length1":16,"length2":22},{"diffs":[[0,"ion/json')\r\n"],[1,"    dealLogin(req,login)\r\n"],[0,"    resp = l"]],"start1":1008,"start2":1008,"length1":24,"length2":50},{"diffs":[[0,"p = "],[-1,"loads("],[0,"urlo"]],"start1":1053,"start2":1053,"length1":14,"length2":8},{"diffs":[[0,"ta))"],[-1,".read())\r\n    return resp"],[1,"\r\n    r = loads(resp.read())\r\n    url = 'https://gist.github.com'+r['url'][r['url'].rfind('/'):]\r\n    return url"],[0,"\r\n\r\n"]],"start1":1077,"start2":1077,"length1":33,"length2":120}]],"length":1347,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376058535658,"patch":[[{"diffs":[[0,"ile,"],[-1,"description,"],[0,"file"]],"start1":374,"start2":374,"length1":20,"length2":8}]],"length":1335,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376058789634,"patch":[[{"diffs":[[0,"oads\r\n\r\n"],[1,"def getName(feature):\r\n    if feature[0] in (\"'\",'\"'):\r\n        feature = feature[1:-1]\r\n    name = path.splitext(path.split(feature)[1])\r\n    if name[1]:\r\n        if name[1]==\".shp\":\r\n            return name[0]\r\n        else:\r\n            return name[1][1:]\r\n    else:\r\n        return name[0]\r\n"],[0,"\r\ndef do"]],"start1":166,"start2":166,"length1":16,"length2":311},{"diffs":[[0,"ile,tbx,"],[-1,"filename,"],[0,"login,de"]],"start1":486,"start2":486,"length1":25,"length2":16},{"diffs":[[0,"ist(outFile,"],[-1,"filename"],[1,"getName(inFile)"],[0,",login,descr"]],"start1":652,"start2":652,"length1":32,"length2":39},{"diffs":[[0,"mdir(p)\r"],[1,"\n    \r"],[0,"\n\r\ndef d"]],"start1":768,"start2":768,"length1":16,"length2":22},{"diffs":[[0,"tion"],[-1,"=False"],[0,""],[1,""],[0,"):\r\n"]],"start1":961,"start2":961,"length1":14,"length2":8}]],"length":1628,"saved":false}
{"ts":1376058798056,"patch":[[{"diffs":[[0,"t(3)"],[-1,",arcpy.GetParameterAsText(4)"],[0,")\r\n"]],"start1":1593,"start2":1593,"length1":35,"length2":7}]],"length":1600,"saved":false}
{"ts":1376058812764,"patch":[[{"diffs":[[0,"e, rmdir"],[1,",path"],[0,"\r\nfrom u"]],"start1":64,"start2":64,"length1":16,"length2":21}]],"length":1605,"saved":false}
{"ts":1376058824958,"patch":[[{"diffs":[[0,"dir,path"],[1,", sep"],[0,"\r\nfrom u"]],"start1":69,"start2":69,"length1":16,"length2":21}]],"length":1610,"saved":false}
{"ts":1376059301042,"patch":[[{"diffs":[[0,"    "],[-1,"return "],[1,"arcpy.Addmessage("],[0,"url"],[1,")"],[0,"\r\n\r\n"]],"start1":1470,"start2":1470,"length1":18,"length2":29}]],"length":1621,"saved":false}
